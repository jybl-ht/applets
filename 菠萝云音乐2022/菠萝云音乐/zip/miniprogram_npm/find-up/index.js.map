{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\nvar path = require('path');\nvar pathExists = require('path-exists');\nvar Promise = require('pinkie-promise');\n\nfunction splitPath(x) {\n\treturn path.resolve(x || '').split(path.sep);\n}\n\nfunction join(parts, filename) {\n\treturn path.resolve(parts.join(path.sep) + path.sep, filename);\n}\n\nmodule.exports = function (filename, opts) {\n\topts = opts || {};\n\n\tvar parts = splitPath(opts.cwd);\n\n\treturn new Promise(function (resolve) {\n\t\t(function find() {\n\t\t\tvar fp = join(parts, filename);\n\n\t\t\tpathExists(fp).then(function (exists) {\n\t\t\t\tif (exists) {\n\t\t\t\t\tresolve(fp);\n\t\t\t\t} else if (parts.pop()) {\n\t\t\t\t\tfind();\n\t\t\t\t} else {\n\t\t\t\t\tresolve(null);\n\t\t\t\t}\n\t\t\t});\n\t\t})();\n\t});\n};\n\nmodule.exports.sync = function (filename, opts) {\n\topts = opts || {};\n\n\tvar parts = splitPath(opts.cwd);\n\tvar len = parts.length;\n\n\twhile (len--) {\n\t\tvar fp = join(parts, filename);\n\n\t\tif (pathExists.sync(fp)) {\n\t\t\treturn fp;\n\t\t}\n\n\t\tparts.pop();\n\t}\n\n\treturn null;\n};\n"]}