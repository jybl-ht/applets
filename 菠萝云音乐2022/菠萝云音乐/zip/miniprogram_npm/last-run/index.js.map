{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\n\nvar assert = require('assert');\n\nvar WM = require('es6-weak-map');\nvar hasNativeWeakMap = require('es6-weak-map/is-native-implemented');\nvar defaultResolution = require('default-resolution');\n\nvar runtimes = new WM();\n\nfunction isFunction(fn) {\n  return (typeof fn === 'function');\n}\n\nfunction isExtensible(fn) {\n  if (hasNativeWeakMap) {\n    // Native weakmap doesn't care about extensible\n    return true;\n  }\n\n  return Object.isExtensible(fn);\n}\n\nfunction lastRun(fn, timeResolution) {\n  assert(isFunction(fn), 'Only functions can check lastRun');\n  assert(isExtensible(fn), 'Only extensible functions can check lastRun');\n\n  var time = runtimes.get(fn);\n\n  if (time == null) {\n    return;\n  }\n\n  var resolution = defaultResolution(timeResolution);\n\n  return time - (time % resolution);\n}\n\nfunction capture(fn, timestamp) {\n  assert(isFunction(fn), 'Only functions can be captured');\n  assert(isExtensible(fn), 'Only extensible functions can be captured');\n\n  timestamp = timestamp || Date.now();\n\n  runtimes.set(fn, timestamp);\n}\n\nfunction release(fn) {\n  assert(isFunction(fn), 'Only functions can be captured');\n  assert(isExtensible(fn), 'Only extensible functions can be captured');\n\n  runtimes.delete(fn);\n}\n\nlastRun.capture = capture;\nlastRun.release = release;\n\nmodule.exports = lastRun;\n"]}