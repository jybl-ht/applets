{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["/*!\n * global-prefix <https://github.com/jonschlinkert/global-prefix>\n *\n * Copyright (c) 2015-2017 Jon Schlinkert.\n * Licensed under the MIT license.\n */\n\n\n\nvar fs = require('fs');\nvar path = require('path');\nvar expand = require('expand-tilde');\nvar homedir = require('homedir-polyfill');\nvar ini = require('ini');\nvar prefix;\n\nfunction getPrefix() {\n  if (process.env.PREFIX) {\n    prefix = process.env.PREFIX;\n  } else {\n    // Start by checking if the global prefix is set by the user\n    var home = homedir();\n    if (home) {\n      // homedir() returns undefined if $HOME not set; path.resolve requires strings\n      var userConfig = path.resolve(home, '.npmrc');\n      prefix = tryConfigPath(userConfig);\n    }\n\n    if (!prefix) {\n      // Otherwise find the path of npm\n      var npm = tryNpmPath();\n      if (npm) {\n        // Check the built-in npm config file\n        var builtinConfig = path.resolve(npm, '..', '..', 'npmrc');\n        prefix = tryConfigPath(builtinConfig);\n\n        if (prefix) {\n          // Now the global npm config can also be checked.\n          var globalConfig = path.resolve(prefix, 'etc', 'npmrc');\n          prefix = tryConfigPath(globalConfig) || prefix;\n        }\n      }\n\n      if (!prefix) fallback();\n    }\n  }\n\n  if (prefix) {\n    return expand(prefix);\n  }\n}\n\nfunction fallback() {\n  var isWindows = require('is-windows');\n  if (isWindows()) {\n    // c:\\node\\node.exe --> prefix=c:\\node\\\n    prefix = process.env.APPDATA\n      ? path.join(process.env.APPDATA, 'npm')\n      : path.dirname(process.execPath);\n  } else {\n    // /usr/local/bin/node --> prefix=/usr/local\n    prefix = path.dirname(path.dirname(process.execPath));\n\n    // destdir only is respected on Unix\n    if (process.env.DESTDIR) {\n      prefix = path.join(process.env.DESTDIR, prefix);\n    }\n  }\n}\n\nfunction tryNpmPath() {\n  try {\n    return fs.realpathSync(require('which').sync('npm'));\n  } catch (err) {}\n  return null;\n}\n\nfunction tryConfigPath(configPath) {\n  try {\n    var data = fs.readFileSync(configPath, 'utf-8');\n    var config = ini.parse(data);\n    if (config.prefix) return config.prefix;\n  } catch (err) {}\n  return null;\n}\n\n/**\n * Expose `prefix`\n */\n\nObject.defineProperty(module, 'exports', {\n  enumerable: true,\n  get: function() {\n    return prefix || (prefix = getPrefix());\n  }\n});\n"]}