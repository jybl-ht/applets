{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\n\nvar isPlainObject = require('is-plain-object');\nvar defaults = require('object.defaults/immutable');\n\nmodule.exports = function(obj, fn, opts) {\n  if (!isObject(obj)) {\n    return;\n  }\n\n  if (typeof fn !== 'function') {\n    return;\n  }\n\n  if (!isPlainObject(opts)) {\n    opts = {};\n  }\n\n  forEachChild(obj, '', fn, 0, opts);\n};\n\nfunction forEachChild(node, baseKey, fn, depth, opts) {\n  var keys = Object.keys(node);\n  if (typeof opts.sort === 'function') {\n    var sortedKeys = opts.sort(keys);\n    if (Array.isArray(sortedKeys)) {\n      keys = sortedKeys;\n    }\n  }\n\n  depth += 1;\n\n  for (var i = 0, n = keys.length; i < n; i++) {\n    var key = keys[i];\n    var keyChain = baseKey + '.' + key;\n    var value = node[key];\n\n    var nodeInfo = defaults(opts);\n    nodeInfo.name = key;\n    nodeInfo.index = i;\n    nodeInfo.count = n;\n    nodeInfo.depth = depth;\n    nodeInfo.parent = node;\n\n    var notDigg = fn(value, keyChain.slice(1), nodeInfo);\n    if (notDigg || !isPlainObject(value)) {\n      continue;\n    }\n\n    forEachChild(value, keyChain, fn, depth, opts);\n  }\n}\n\nfunction isObject(v) {\n  return Object.prototype.toString.call(v) === '[object Object]';\n}\n\n"]}